/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package com.example.login;

import android.view.View;
import android.widget.EditText;
import android.text.Editable;

import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import com.ctgu.util.IO;
import com.ctgu.util.NewTaskPool;
import com.ctgu.base.BaseTask;
import com.ctgu.base.BaseUiAuth;
import com.ctgu.base.C;
import com.ctgu.ctguhelp.R;
import com.ctgu.ctguhelp.R.color;

import android.widget.Button;
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.widget.TextView;
import android.text.TextPaint;

public class Register extends BaseUiAuth {
	private String S_my_userName;
	private String S_my_userNumber;
	private String S_password;
	private String S_password_again;
	private EditText Tv_my_userName;
	private EditText Tv_my_userNumber;
	private EditText Tv_password;
	private EditText Tv_password_again;
	private Button bt_register;

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.register);
		TextView user_login = (TextView) findViewById(R.id.user_login);
		Tv_my_userNumber = (EditText) findViewById(R.id.register_my_userNumber);
		Tv_my_userName = (EditText) findViewById(R.id.register_my_userName);
		Tv_password = (EditText) findViewById(R.id.register_password);
		Tv_password_again = (EditText) findViewById(R.id.register_password_again);
		bt_register = (Button) findViewById(R.id.bt_register);
		bt_register.setOnClickListener(new OnClick());
		user_login.setOnClickListener(new OnClick());
		user_login.getPaint().setFlags(color.red);
	}

	class OnClick implements View.OnClickListener {

		public void onClick(View v) {
			switch (v.getId()) {
			case R.id.user_login:
				forward(UserLogin.class);
				break;
			case R.id.bt_register:
				register();
				break;
			}
		}

		@SuppressLint("NewApi")
		private void register() {
			String userNumber = Tv_my_userNumber.getText().toString().trim();
			String userName = Tv_my_userName.getText().toString().trim();
			String password = Tv_password.getText().toString().trim();
			String passwordAgain = Tv_password_again.getText().toString()
					.trim();
			if (userNumber.isEmpty() || userName.isEmpty()
					|| password.isEmpty() || passwordAgain.isEmpty()) {
				toast("内容不能为空");
			} else if (password.equals(passwordAgain)) {
				HashMap<String, String> taskArgs = new HashMap<String, String>();
				taskArgs.put("my_user_number", userNumber);
				taskArgs.put("my_user_name", userName);
				taskArgs.put("my_user_password", password);
				pd.show();
				taskPool_ctguHelp.addTask(C.task.setMyUser, C.api.setMyUser,
						taskArgs, new BaseTask() {

							@Override
							public void onComplete(InputStream inputStream) {
								String data = IO
										.inputSreamToString(inputStream);
								sendMessage(BaseTask.TASK_COMPLETE,
										C.task.setMyUser, data);
							}

							@Override
							public void onError(String error) {
								sendMessage(BaseTask.NETWORK_ERROR,
										C.task.setMyUser, null);
							}

						}, 0);

			} else {
				toast("密码不一样请重新输入");
				Tv_password.setText("");
				Tv_password_again.setText("");
			}
		}
	}

	public void onTaskComplete(int taskId, Object message) {
		String result = (String) message;
		switch (taskId) {
		case C.task.setMyUser: {
			if (pd.isShowing()) {
				pd.dismiss();
			}
			String[] ResultArray = result.split("&");
			if (ResultArray[0].equals(new String("0"))) {
				toast("账号重复已被注册");
			}else if (ResultArray[1].equals(new String("0"))) {
				toast("昵称已被注册");
			}else if (ResultArray[2].equals("0")) {
				toast("注册失败");
			}else{
				toast("注册成功");
				forward(UserLogin.class);
			}
		}
		}
	}
}
