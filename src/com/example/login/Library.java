/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package com.example.login;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;

import org.apache.http.Header;

import com.ctgu.adapter.Library_Adapter;
import com.ctgu.base.BaseTask;
import com.ctgu.base.BaseUiAuth;
import com.ctgu.base.C;
import com.ctgu.ctguhelp.R;
import com.ctgu.model.Book;
import com.ctgu.model.MBookDetails;

import com.ctgu.util.AsyncHttp;
import com.ctgu.util.IO;
import com.ctgu.util.XmlToString;
import com.loopj.android.http.AsyncHttpResponseHandler;
import com.loopj.android.http.RequestParams;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

import android.annotation.SuppressLint;
import android.app.AlertDialog;

public class Library extends BaseUiAuth implements OnScrollListener, OnItemClickListener {
	AlertDialog.Builder builder;
	EditText keyWord;
	Library_Adapter adapter;
	ListView books;
	private String receivetime;
	private int lastItem;
	private String key;
	private int pageIndex = 0;
	View moreView;
	LayoutInflater inflater;

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.library);
		inflater = LayoutInflater.from(getApplicationContext());
		adapter = new Library_Adapter(this);
		books = (ListView) findViewById(R.id.book);
		moreView = inflater.inflate(R.layout.loading_foot_view, null);
		Bundle b = getIntent().getExtras();
		key = b.getString("key");
		books.setAdapter(adapter);

		books.setOnScrollListener(this);
		books.setOnItemClickListener(this);

		pageIndex = 1;
		getBooks();
	}

	private void getBooks() {

		try {
			key = URLEncoder.encode(key, "GBK");
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		String url = "http://sulcmis.lib.ctgu.edu.cn/searchresult.aspx?anywords=" + key + "&dt=ALL&cl=ALL&dp=20&sf=M_PUB_YEAR&ob=DESC&sm=table&dept=ALL&page=" + pageIndex;
		System.out.println(url);
		pd.show();
		AsyncHttp.Get(url, new AsyncHttpResponseHandler() {

			@Override
			public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
				if (pd.isShowing()) {
					pd.dismiss();
				}
				try {
					String reaponse = new String(responseBody, "utf-8");
					pageIndex = Integer.valueOf(XmlToString.getLibraryPage(reaponse));
					ArrayList<Book> books = XmlToString.xml_to_libraray(reaponse);
					System.out.println(books.size());
					adapter.addItems(books);
					toast("第" + pageIndex + "页");
					pageIndex++;
				} catch (UnsupportedEncodingException e) {
					System.out.println("错误");

				}
			}

			@Override
			public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {
				System.out.println("错误");
			}
		});

	}

	@Override
	public void onScrollStateChanged(AbsListView view, int scrollState) {
		if (lastItem > adapter.getCount() && scrollState == OnScrollListener.SCROLL_STATE_IDLE) {
			pd.show();
			AsyncHttp.Get("http://sulcmis.lib.ctgu.edu.cn/searchresult.aspx?anywords=" + key + "&dt=ALL&cl=ALL&dp=20&sf=M_PUB_YEAR&ob=DESC&sm=table&dept=ALL&page=" + pageIndex,
					new AsyncHttpResponseHandler() {

						@Override
						public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
							if (pd.isShowing()) {
								pd.dismiss();
							}
							try {
								String reaponse = new String(responseBody, "utf-8");
								pageIndex = Integer.valueOf(XmlToString.getLibraryPage(reaponse));
								ArrayList<Book> books = XmlToString.xml_to_libraray(reaponse);

								adapter.addItems(books);
								toast("第" + pageIndex + "页");
								pageIndex++;
							} catch (UnsupportedEncodingException e) {
							}
						}

						@Override
						public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {

						}
					});
		}

	}

	@Override
	public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
		lastItem = firstVisibleItem + visibleItemCount + 1;

	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
		Book book = (Book) adapter.getItem(position);
		pd.show();
		AsyncHttp.Get("http://sulcmis.lib.ctgu.edu.cn/" + book.getUrl(), new AsyncHttpResponseHandler() {

			@Override
			public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
				if (pd.isShowing()) {
					pd.dismiss();
				}
				try {
					String reaponse = new String(responseBody, "utf-8");

					receivetime = XmlToString.getBookReadTims(reaponse);
					ArrayList<MBookDetails> books = XmlToString.getBookDetails(reaponse);
					ArrayList<String> s = new ArrayList<String>();

					builder = new AlertDialog.Builder(Library.this);
					builder.setTitle("图书详情");
					for (int i = 0; i < books.size(); i++) {
						s.add("\n馆藏地" + books.get(i).getPlace() + "\n索取号" + books.get(i).getIndexNumber() + "\n状态" + books.get(i).getStatus());

					}
					s.add("\n共被借过" + receivetime + "次");
					int lenth = s.size();
					String[] a = new String[lenth];
					for (int i = 0; i < lenth; i++) {
						a[i] = s.get(i);
					}
					builder.setItems(a, null);
					builder.create().show();
				} catch (UnsupportedEncodingException e) {
				}
			}

			@Override
			public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {

			}
		});

	}
}
