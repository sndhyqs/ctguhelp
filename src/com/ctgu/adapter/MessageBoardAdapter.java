/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package com.ctgu.adapter;

import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.content.Context;
import java.util.ArrayList;

import com.ctgu.ctguhelp.R;
import com.ctgu.model.Message;
import com.ctgu.util.ExpressionUtil;
import com.example.login.Message_Board_Test;

import android.text.SpannableString;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.TextView;

public class MessageBoardAdapter extends BaseAdapter {
	private int index;
	private Context conext;
	private ArrayList<Message> messgae_board;
	Message_Board_Test myMessage;
	public MessageBoardAdapter(Context conext, Message_Board_Test m) {
		messgae_board = new ArrayList<Message>();
		this.myMessage = m;
		this.conext = conext;

	}

	public void addItems(ArrayList<Message> newItems) {
		if ((newItems == null) || (newItems.size() <= 0)) {
			return;
		}
		for (int i = 0; i < newItems.size(); i++) {
			messgae_board.add(newItems.get(i));
		}

		notifyDataSetChanged();
	}

	public void setGood(int position) {
		Message message = (Message) getItem(position);
		messgae_board.remove(position);
		message.setGood(message.getGood() + 1);
		messgae_board.add(position, message);
		notifyDataSetChanged();
	}

	public void setDisscuss(int position) {
		Message message = (Message) getItem(position);
		messgae_board.remove(position);
		message.setGood(message.getGood() + 1);
		messgae_board.add(position, message);
		notifyDataSetChanged();
	}

	public void clear() {
		messgae_board.clear();
		notifyDataSetChanged();
	}

	public int getCount() {
		return messgae_board.size();
	}

	public Object getItem(int position) {
		return messgae_board.get(position);
	}

	public long getItemId(int position) {
		return position;
	}

	public View getView(int position, View convertView, ViewGroup parent) {

		Message message = (Message) messgae_board.get(position);
		this.index = position;
		View v = View.inflate(conext, R.layout.message_board_item, null);

		LinearLayout conview = (LinearLayout) v.findViewById(R.id.conview);
		TextView message_board_content = (TextView) v.findViewById(R.id.message_board_content);
		TextView message_board_user = (TextView) v.findViewById(R.id.message_board_user);
		TextView message_board_time = (TextView) v.findViewById(R.id.message_board_time);
		TextView read_count = (TextView) v.findViewById(R.id.message_board_read);
		Button messgae_good = (Button) v.findViewById(R.id.messgae_good);
		Button messgae_discuss = (Button) v.findViewById(R.id.messgae_discuss);

		messgae_good.setOnClickListener(new onClick());
		messgae_discuss.setOnClickListener(new onClick());
		conview.setOnClickListener(new onClick());

		message_board_time.setText(message.getTime());
		message_board_user.setText(message.getUser());
		String str =message.getContent();
		String zhengze = "f0[0-9]{2}|f10[0-7]";									//正则表达式，用来判断消息内是否有表情
		try {
			SpannableString spannableString = ExpressionUtil.getExpressionString(conext, str, zhengze);
			message_board_content.setText(spannableString);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} 
		
		read_count.setText("(" + String.valueOf(message.getRead()) + ")");
		int n = message.getGood();

		messgae_good.setText("(" + String.valueOf(n) + ")");

		int i = message.getDiscuss();

		messgae_discuss.setText("(" + String.valueOf(i) + ")");

		return v;
	}

	class onClick implements OnClickListener {
		final int p = index;

		@Override
		public void onClick(View v) {

			myMessage.onItem(v.getId(), p, getItem(p));
		}

	}
}
